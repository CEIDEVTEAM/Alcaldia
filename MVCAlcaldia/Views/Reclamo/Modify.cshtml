@model CommonSolution.DTOs.DtoReclamo

@{
    ViewBag.Title = "Modify";
}

<h2>Mantenimineto de reclamo</h2>

@using (Html.BeginForm("ModifyReclamo", "Reclamo"))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)
    <div class="form-group">
        @Html.LabelFor(model => model.id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.id, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.id, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.fechaYhora, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.fechaYhora, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.fechaYhora, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Nuevo Estado</label>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.estado, (List<SelectListItem>)ViewBag.colEstadoSelect, "-- Estado --", new { @class = "form-control", id = "selectValue" })
            @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
        </div>
    </div>
    @if (Model.estado == CommonSolution.ENUMs.EnumEstado.PENDIENTE)
    {
        <div class="form-group">
            <label class="control-label col-md-2">Cuadrilla</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.idCuadrilla, (List<SelectListItem>)ViewBag.colCuadrillasSelect, "-- Cuadrillas --", new { @class = "form-control", id = "selectValue" })
                @Html.ValidationMessageFor(model => model.idCuadrilla, "", new { @class = "text-danger" })
            </div>
        </div>}
    <div class="form-group">
        @Html.LabelFor(model => model.observacionFuncionario, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.observacionFuncionario, new { @class = "form-control", @rows = "6", id = "observaciones" })
            @Html.ValidationMessageFor(model => model.observacionFuncionario, "", new { @class = "text-danger" })
            <label class="control-label">(Los comentarios de Funcionario seran</label>
            <label class="control-label">&nbsp; reflejados en el panel de Ciudadanos)</label>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.observacionCuadrilla, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.observacionCuadrilla, new { @class = "form-control", @rows = "6", id = "observaciones" })
            @Html.ValidationMessageFor(model => model.observacionCuadrilla, "", new { @class = "text-danger" })
            <label class="control-label">(Uso interno)</label>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Regresar a Gestión de reclamos", "List")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
