@model IEnumerable<CommonSolution.DTOs.DtoCuadrilla>
@using GridMvc.Html
@{
    ViewBag.Title = "Listado de Cuadrillas";
}
@Styles.Render("~/Content/gridmvc")
<div class="row">
    <div class="col-sm-4">
        <div class="panel panel-default">
            <div>
                <input type="button" onclick="location.href='@Url.Action("Add", "Cuadrilla")'" class="btn btn-default" value="Ingresar" style="width: 100%; max-width: initial" />
            </div>
        </div>
    </div>
    <div class="col-sm-4">
        <div class="panel panel-default">
            <div>
                <input type="button" onclick="location.href='@Url.Action("Modify", "Cuadrilla")'" class="btn btn-default" value="Actualizar" style="width: 100%; max-width: initial" />
            </div>
        </div>
    </div>
    <div class="col-sm-4">
        <div class="panel panel-default">
            <div>
                <input type="button" onclick="location.href='@Url.Action("List", "Cuadrilla")'" class="btn btn-default" value="Listar" style="width: 100%; max-width: initial" disabled />
            </div>
        </div>
    </div>
</div>

<h2>Listado de Cuadrillas</h2>

@Html.Grid(Model).Columns(columns =>
{
    columns.Add(c => c.nombre).Titled("Nombre").SetWidth(30);
    columns.Add(c => c.encargado).Titled("Encargado").SetWidth(30);
    columns.Add(c => c.idZona).Titled("Nro. Zona").SetWidth(30);
    columns.Add(c => c.cantidadDePeones).Titled("Can. Peones").SetWidth(20);
    columns.Add().Encoded(false).Sanitized(false).SetWidth(10).RenderValueAs(o => Html.ActionLink("Actualizar", "Modify", new { id = o.id }, new { @class = "btn btn-success" }));
    columns.Add().Encoded(false).Sanitized(false).SetWidth(30).RenderValueAs(o => Html.ActionLink("Borrar", "Delete", new { id = o.id }, new { @class = "btn btn-danger" }));

}).WithPaging(8).EmptyText("No hay nada que mostrar").Selectable(true).Filterable()


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/grid")
}