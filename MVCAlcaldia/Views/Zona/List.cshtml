@model IEnumerable<CommonSolution.DTOs.DtoZona>
@using GridMvc.Html
@{
    ViewBag.Title = "Listar Zonas";
}
<div class="row">
    <div class="col-sm-4">
        <div class="panel panel-default">
            <div>
                <input type="button" onclick="location.href='@Url.Action("Add", "Zona")'" class="btn btn-default" value="Ingresar" style="width: 100%; max-width: initial" />
            </div>
        </div>
    </div>
    <div class="col-sm-4">
        <div class="panel panel-default">
            <div>
                <input type="button" onclick="location.href='@Url.Action("List", "Zona")'" class="btn btn-default" value="Listar/Actualizar" style="width: 100%; max-width: initial" disabled />
            </div>
        </div>
    </div>
</div>
<h2>Listado de Zonas</h2>


@Html.Grid(Model).Columns(columns =>
{
    columns.Add(c => c.id).Titled("Nro").SetWidth(20).Filterable(true);
    columns.Add(c => c.nombre).Titled("Nombre").SetWidth(250).Filterable(true);
    columns.Add(c => c.color).Titled("Color").SetWidth(20).Sanitized(false).Encoded(false).RenderValueAs(c => new HtmlString(
    "<div style='height: 20px; width: 20px; background-color: " + c.color + "'></div>"
    ));

    columns.Add(c => c.reclamosActivos).Titled("Rec. activos").SetWidth(20).Filterable(true); ;
    columns.Add().Encoded(false).Sanitized(false).RenderValueAs(o => Html.ActionLink(" ", "Delete", new { id = o.id }, new { @class = "btn btn-danger glyphicon glyphicon-remove-circle" }));


}).WithPaging(8).EmptyText("No hay nada que mostrar").Sortable()

@Styles.Render("~/Content/gridmvc")

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/grid")

}
